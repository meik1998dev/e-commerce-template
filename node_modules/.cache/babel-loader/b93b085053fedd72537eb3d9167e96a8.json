{"ast":null,"code":"var _jsxFileName = \"F:\\\\app\\\\my-app\\\\src\\\\redux\\\\store.js\";\nimport { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const store = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\nstore.propTypes = {\n  props: PropTypes\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(store);","map":{"version":3,"sources":["F:/app/my-app/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","rootReducer","React","PropTypes","connect","store","props","propTypes","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,SAAQA,WAAR,EAAsBC,eAAtB,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAC5B,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CANM;AAQPD,KAAK,CAACE,SAAN,GAAkB;AACdD,EAAAA,KAAK,EAAEH;AADO,CAAlB;;AAIA,MAAMK,eAAe,GAAIC,KAAD,KAAY,EAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAG,EAA3B;AAIA,eAAeN,OAAO,CAACI,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CL,KAA7C,CAAf","sourcesContent":["import {createStore , applyMiddleware} from 'redux'\r\nimport logger from 'redux-logger'\r\nimport rootReducer from './root-reducer'\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nexport const store = (props) => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nstore.propTypes = {\r\n    props: PropTypes\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(store)\r\n"]},"metadata":{},"sourceType":"module"}